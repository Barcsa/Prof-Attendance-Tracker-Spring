{"version":3,"sources":["Dashboard.js","pagination.js","DeleteButton.js","cursuri.js","profesori.js","evidente.js","notFound.js","authProvider.js","dataProvider.js","App.js","serviceWorker.js","index.js"],"names":["Card","CardHeader","title","localStorage","getItem","props","Pagination","rowsPerPageOptions","DeleteButton","doAction","content","label","useState","open","setOpen","Button","variant","color","startIcon","onClick","Confirm","isOpen","confirm","confirmColor","cancel","onConfirm","onClose","ListCursuri","console","log","List","filters","bulkActions","pagination","Responsive","medium","Datagrid","rowClick","TextField","source","sortable","CursName","record","CustomToolbar","Toolbar","SaveButton","deleteCurs","request","Request","id","method","headers","fetch","then","response","document","location","href","FilterProfesor","Filter","ReferenceInput","reference","allowEmpty","alwaysOn","SelectInput","optionText","optionValue","CursEdit","Edit","SimpleForm","redirect","toolbar","validate","required","TextInput","CursCreate","Create","ListProfesori","ProfesorName","ProfesorEdit","ProfesorCreate","email","ListEvidente","EvidentaName","deleteEvidenta","EvidentaEdit","EvidentaCreate","Title","CardContent","type","params","AUTH_LOGIN","username","password","body","JSON","stringify","Headers","status","Error","statusText","json","token","role","profesorId","name","setItem","AUTH_LOGOUT","removeItem","Promise","resolve","AUTH_ERROR","reject","AUTH_CHECK","AUTH_GET_PERMISSIONS","roles","API_URL","convertDataProviderRequestToHTTP","resource","a","GET_MANY","GET_LIST","GET_ONE","UPDATE","CREATE","DELETE","DELETE_MANY","url","query","filter","profesor","options","data","convertHTTPResponseToDataProvider","map","x","total","fetchJson","fetchUtils","Accept","set","theme","createMuiTheme","palette","primary","blue","secondary","yellow","error","red","contrastThreshold","tonalOffset","MyLoginPage","Login","backgroundImage","messages","ro","ra","notification","http_error","action","save","delete","show","create","edit","list","export","search","refresh","boolean","true","false","null","page","dashboard","loading","not_found","auth","auth_check_error","user_menu","sign_in","sign_in_error","logout","validation","minLength","maxLength","minValue","maxValue","number","oneOf","regex","en","englishMessages","i18nProvider","locale","App","Admin","loginPage","catchAll","NotFound","Dashboard","dataProvider","authProvider","Resource","icon","SchoolIcon","PersonPinIcon","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8QAIe,oBACX,kBAACA,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,QAAUC,aAAaC,QAAQ,QAAU,kD,kBCDrD,WAAAC,GAAK,OAAI,kBAACC,EAAA,EAAD,eAAYC,mBAAoB,IAAQF,K,oCC6BjDG,EA3BM,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUP,EAA4B,EAA5BA,MAAOQ,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAAY,EAClCC,oBAAS,GADyB,mBACnDC,EADmD,KAC7CC,EAD6C,KAU1D,OACI,kBAAC,WAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,QAAQC,UAAW,kBAAC,IAAD,MAAgBC,QAVzD,kBAAML,GAAQ,KAUkEH,GAC5F,kBAACS,EAAA,EAAD,CACIC,OAAQR,EACRX,MAAOA,EACPQ,QAASA,EACTY,QAAQ,KACRC,aAAa,UACbC,OAAO,KACPC,UAfS,WACjBhB,IACAK,GAAQ,IAcAY,QAlBc,kBAAMZ,GAAQ,Q,6HCW/Ba,EAAc,SAAAtB,GACNF,aAAaC,QAAQ,cAC3BD,aAAaC,QAAQ,QADlC,IADkC,EAGZQ,mBAAS,MAHG,6BAIlCgB,QAAQC,IAAI1B,cAYZ,OACE,oCACF,kBAAC2B,EAAA,EAAD,eACAC,QAAS,kBAAC,EAAD,MACT7B,MAAM,WAAcG,EAFpB,CAE2B2B,aAAa,EAAOC,WAAY,kBAAC,EAAD,QACzD,kBAACC,EAAA,EAAD,CACEC,OACE,kBAACC,EAAA,EAAD,CAAUC,SAAS,QACjB,kBAACC,EAAA,EAAD,CAAWC,OAAO,WAAWC,UAAU,EAAO7B,MAAM,cACpD,kBAAC2B,EAAA,EAAD,CAAWC,OAAO,eAAeC,UAAU,EAAO7B,MAAM,iBACxD,kBAAC2B,EAAA,EAAD,CAAWC,OAAO,KAAKC,UAAU,EAAO7B,MAAM,OAC9C,kBAAC2B,EAAA,EAAD,CAAWC,OAAO,oBAAoBC,UAAU,EAAO7B,MAAM,mBASjE8B,EAAW,SAAC,GAAe,EAAbC,OAElB,OAAO,+CAGHC,EAAgB,SAAAtC,GAAK,OACzB,kBAACuC,EAAA,EAAYvC,EACT,kBAACwC,EAAA,EAAD,MADJ,WAGI,kBAAC,EAAD,CAAclC,MAAM,cAAcF,SAAU,kBAAMqC,EAAWzC,IAAQH,MAAM,cAAcQ,QAAQ,uDAKjGoC,EAAa,SAAC,GAAqB,IAAD,IAAlBJ,OACZK,EAAU,IAAIC,QAAQ,uCADQ,MAAT,GAAS,GACkCC,GAAK,UAAW,CAClFC,OAAQ,MACRC,QAAS,CAAE,kBAAmB,UAAYhD,aAAaC,QAAQ,SAC/D,eAAgB,qCAElBgD,MAAML,GACHM,MAAK,SAAAC,GACJC,SAASC,SAASC,KAAO,iBAG7BC,EAAiB,SAACrD,GAAD,OACrB,kBAACsD,EAAA,EAAWtD,EACwB,eAAjCF,aAAaC,QAAQ,SACpB,kBAACwD,EAAA,EAAD,CACEjD,MAAM,WACN4B,OAAO,WACPsB,UAAU,YACVC,YAAU,EACVC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAaC,WAAW,OAAOC,YAAY,UAKtCC,EAAW,SAAC9D,GAAD,OACtB,kBAAC+D,EAAA,EAAD,eAAMlE,MAAO,kBAAC,EAAD,OAAkBG,GAC7B,kBAACgE,EAAA,EAAD,CAAYC,SAAS,OAAOC,QAAS,kBAAC,EAAD,OAEnC,kBAACX,EAAA,EAAD,CAAgBY,SAAUC,cAAY9D,MAAM,WAAW4B,OAAO,aAAasB,UAAU,aACjF,kBAACG,EAAA,EAAD,CAAaE,YAAY,KAAKD,WAAW,UAG7C,kBAACS,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,WAAW5B,MAAM,cACzD,kBAAC+D,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,KAAK5B,MAAM,mBACnD,kBAAC+D,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,eAAe5B,MAAM,oBAKtDgE,EAAa,SAAAtE,GAExB,OACE,oCAEA,kBAACuE,EAAA,EAAD,eAAQ1E,MAAM,eAAkBG,GAChC,kBAACgE,EAAA,EAAD,CAAYC,SAAS,OAAOC,QAAS,kBAAC,EAAD,OACnC,kBAACX,EAAA,EAAD,CAAgBY,SAAUC,cAAY9D,MAAM,WAAW4B,OAAO,aAAasB,UAAU,aACjF,kBAACG,EAAA,EAAD,CAAaE,YAAY,KAAKD,WAAW,UAG7C,kBAACS,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,WAAW5B,MAAM,cACzD,kBAAC+D,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,KAAK5B,MAAM,mBACnD,kBAAC+D,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,eAAe5B,MAAM,qBClGtDkE,EAAgB,SAAAxE,GAAK,OAChC,kBAACyB,EAAA,EAAD,eAAM5B,MAAM,aAAgBG,EAA5B,CAAmC2B,aAAa,EAAOC,WAAY,kBAAC,EAAD,QACjE,kBAACC,EAAA,EAAD,CACEC,OACE,kBAACC,EAAA,EAAD,CAAUC,SAAS,QACjB,kBAACC,EAAA,EAAD,CAAWC,OAAO,OAAO5B,MAAM,SAC/B,kBAAC2B,EAAA,EAAD,CAAWC,OAAO,OAAO5B,MAAM,gBAC/B,kBAAC2B,EAAA,EAAD,CAAWC,OAAO,QAAQ5B,MAAM,0BAOpCmE,EAAe,WAEnB,OAAO,yDAGHnC,EAAgB,SAAAtC,GAAK,OACzB,kBAACuC,EAAA,EAAYvC,EACT,kBAACwC,EAAA,EAAD,QAIOkC,EAAe,SAAA1E,GAAK,OAC/B,kBAAC+D,EAAA,EAAD,eAAMlE,MAAO,kBAAC,EAAD,OAAsBG,GACjC,kBAACgE,EAAA,EAAD,CAAYE,QAAS,kBAAC,EAAD,MAAmBD,SAAS,QAC/C,kBAACI,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,OAAO5B,MAAM,SACrD,kBAAC+D,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,QAAQ5B,MAAM,qBACtD,kBAAC2B,EAAA,EAAD,CAAWC,OAAO,OAAO5B,MAAM,aAMxBqE,EAAiB,SAAA3E,GAAK,OACjC,kBAACuE,EAAA,EAAD,eAAQ1E,MAAM,mBAAsBG,GAClC,kBAACgE,EAAA,EAAD,CAAYC,SAAS,QACnB,kBAACI,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,OAAO5B,MAAM,SACrD,kBAAC+D,EAAA,EAAD,CAAWF,SAAUC,cAAYlC,OAAO,QAAQ5B,MAAM,qBACtD,kBAAC+D,EAAA,EAAD,CAAWF,SAAU,CAACC,cAAYQ,eAAU1C,OAAO,OAAO5B,MAAM,aClDzDuE,EAAe,SAAA7E,GACPF,aAAaC,QAAQ,cAC3BD,aAAaC,QAAQ,QADlC,IADmC,EAGbQ,mBAAS,MAHI,6BAInCgB,QAAQC,IAAI1B,cAYZ,OACE,oCACF,kBAAC2B,EAAA,EAAD,eACAC,QAAS,kBAAC,EAAD,MACT7B,MAAM,YAAeG,EAFrB,CAE4B2B,aAAa,EAAOC,WAAY,kBAAC,EAAD,QAC1D,kBAACC,EAAA,EAAD,CACEC,OACE,kBAACC,EAAA,EAAD,CAAUC,SAAS,cAUrB8C,EAAe,SAAC,GAAe,EAAbzC,OAEtB,OAAO,mDAGHC,EAAgB,SAAAtC,GAAK,OACzB,kBAACuC,EAAA,EAAYvC,EACT,kBAACwC,EAAA,EAAD,MADJ,WAGI,kBAAC,EAAD,CAAclC,MAAM,kBAAkBF,SAAU,kBAAM2E,EAAe/E,IAAQH,MAAM,kBAAkBQ,QAAQ,4DAK7G0E,EAAiB,SAAC,GAAqB,IAAD,IAAlB1C,OAChBK,EAAU,IAAIC,QAAQ,wCADY,MAAT,GAAS,GAC+BC,GAAK,UAAW,CACnFC,OAAQ,MACRC,QAAS,CAAE,kBAAmB,UAAYhD,aAAaC,QAAQ,SAC/D,eAAgB,qCAElBgD,MAAML,GACHM,MAAK,SAAAC,GACJC,SAASC,SAASC,KAAO,kBAG7BC,EAAiB,SAACrD,GAAD,OACrB,kBAACsD,EAAA,EAAWtD,EACwB,eAAjCF,aAAaC,QAAQ,SACpB,kBAACwD,EAAA,EAAD,CACEjD,MAAM,WACN4B,OAAO,WACPsB,UAAU,YACVC,YAAU,EACVC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAaC,WAAW,OAAOC,YAAY,UAKtCmB,EAAe,SAAChF,GAAD,OAC1B,kBAAC+D,EAAA,EAAD,eAAMlE,MAAO,kBAAC,EAAD,OAAsBG,GACjC,kBAACgE,EAAA,EAAD,CAAYC,SAAS,OAAOC,QAAS,kBAAC,EAAD,UAO5Be,EAAiB,SAAAjF,GAE5B,OACE,oCAEA,kBAACuE,EAAA,EAAD,eAAQ1E,MAAM,mBAAsBG,GACpC,kBAACgE,EAAA,EAAD,CAAYC,SAAS,OAAOC,QAAS,kBAAC,EAAD,W,mBCrG1B,qBACX,kBAACvE,EAAA,EAAD,KACI,kBAACuF,GAAA,EAAD,CAAOrF,MAAM,cACb,kBAACsF,GAAA,EAAD,KACI,sD,mFCDG,YAACC,EAAMC,GAEpB,GAAID,IAASE,KAAY,CAAC,IAChBC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SACZ9C,EAAU,IAAIC,QAAQ,uCAAwC,CAClEE,OAAQ,OACR4C,KAAMC,KAAKC,UAAU,CAAEJ,WAAUC,aACjC1C,QAAS,IAAI8C,QAAQ,CAAE,eAAgB,uBAEzC,OAAO7C,MAAML,GACVM,MAAK,SAAAC,GACJ,GAAIA,EAAS4C,OAAS,KAAO5C,EAAS4C,QAAU,IAC9C,MAAM,IAAIC,MAAM7C,EAAS8C,YAE3B,OAAO9C,EAAS+C,UAEjBhD,MAAK,YAA8C,IAA3CiD,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,KAAMxB,EAAW,EAAXA,MACpC9E,aAAauG,QAAQ,QAASJ,GAC9BnG,aAAauG,QAAQ,SAAUH,GAC/BpG,aAAauG,QAAQ,OAAQH,GAC7BpG,aAAauG,QAAQ,QAASzB,GAC9B9E,aAAauG,QAAQ,OAAQD,GAC7BtG,aAAauG,QAAQ,aAAcF,MAK3C,GAAIf,IAASkB,KAOX,OANAxG,aAAayG,WAAW,SACxBzG,aAAayG,WAAW,UACxBzG,aAAayG,WAAW,QACxBzG,aAAayG,WAAW,SACxBzG,aAAayG,WAAW,QACxBzG,aAAayG,WAAW,cACjBC,QAAQC,UAGjB,GAAIrB,IAASsB,KAAY,CAAC,IAChBb,EAAWR,EAAXQ,OACR,OAAe,MAAXA,GAA6B,MAAXA,GACpB/F,aAAayG,WAAW,SACjBC,QAAQG,UAEVH,QAAQC,UAGjB,GAAIrB,IAASwB,KACX,OAAO9G,aAAaC,QAAQ,SAAWyG,QAAQC,UAAYD,QAAQG,SAGrE,GAAIvB,IAASyB,KAAsB,CACjC,IAAMC,EAAQhH,aAAaC,QAAQ,QACnC,OAAO+G,EAAQN,QAAQC,QAAQK,GAASN,QAAQG,SAElD,OAAOH,QAAQC,S,ooBClDjB,IAAMM,GAAU,wBAGVC,GAAgC,yCAAG,WAAO5B,EAAM6B,EAAU5B,GAAvB,0BAAA6B,EAAA,sDACjChB,EAAOpG,aAAaC,QAAQ,QAClCwB,QAAQC,IAAI0E,GACZ3E,QAAQC,IAAI1B,cAH2B,KAI/BsF,EAJ+B,cAKhC+B,KALgC,SAMhCC,KANgC,SAmDhCC,KAnDgC,UAwDhCC,KAxDgC,UA6DhCC,KA7DgC,UAmEhCC,KAnEgC,UAwEhCC,KAxEgC,sBAOtB,kBAATvB,EAP+B,oBAQ3BC,EAAarG,aAAaC,QAAQ,cACvB,YAAbkH,EAT6B,0CAUxB,CACLS,IAAI,GAAD,OAAKX,GAAL,gBAAoBE,EAApB,qBAAyCd,KAXf,WAcX,YAAbc,EAdwB,wBAezBU,EAAQ,CACZC,OAAQlC,KAAKC,UAAUN,EAAOuC,SAhBD,kBAmBxB,CACLF,IAAI,GAAD,OAAKX,GAAL,gBAAoBE,EAApB,qBAAyCd,EAAzC,YAAuDR,qBACxDgC,MArB2B,WAyBZ,aAAbV,EAzByB,wBA0BzBU,EAAQ,CACZC,OAAQlC,KAAKC,UAAUN,EAAOuC,SA3BD,kBA8BxB,CACLF,IAAI,GAAD,OAAKX,GAAL,gBAAoBE,EAApB,qBAAyCd,EAAzC,YAAuDR,qBACxDgC,MAhC2B,WAsClB,YAAbV,EAtC+B,wBAuC3BU,EAAQ,CACZC,OAAQlC,KAAKC,UAAUN,EAAOuC,SAEhC9H,aAAauG,QAAQ,aAAchB,EAAOuC,OAAOC,UACjDtG,QAAQC,IAAI6D,EAAOuC,OAAOC,UA3CO,kBA4C1B,CACLH,IAAI,GAAD,OAAKX,GAAL,gBAAoBE,EAApB,YAAgCtB,qBAAUgC,MA7Cd,iCAgD5B,CACLD,IAAI,GAAD,OAAKX,GAAL,YAAgBE,KAjDc,iCAoD5B,CACLS,IAAI,GAAD,OAAKX,GAAL,YAAgBE,EAAhB,YAA4B5B,EAAOzC,IACtCkF,QAAS,CAAEjF,OAAQ,MAAO4C,KAAMC,KAAKC,UAAUN,EAAO0C,SAtDrB,iCAyD5B,CACLL,IAAI,GAAD,OAAKX,GAAL,gBAAoBE,EAApB,YAAgC5B,EAAOzC,IAC1CkF,QAAS,CAAEjF,OAAQ,MAAO4C,KAAMC,KAAKC,UAAUN,EAAO0C,SA3DrB,iCA+D5B,CACLL,IAAI,GAAD,OAAKX,GAAL,gBAAoBE,GACvBa,QAAS,CAAEjF,OAAQ,OAAQ4C,KAAMC,KAAKC,UAAUN,EAAO0C,SAjEtB,iCAoE5B,CACLL,IAAI,GAAD,OAAKX,GAAL,gBAAoBE,EAApB,YAAgC5B,EAAOzC,IAC1CkF,QAAS,CAAEjF,OAAQ,YAtEc,eAyE7B8E,EAAQ,CACZC,OAAQlC,KAAKC,UAAU,CAAE/C,GAAIyC,EAAOzC,MA1EH,kBA4E5B,CACL8E,IAAI,GAAD,OAAKX,GAAL,YAAgBE,EAAhB,YAA4BtB,qBAAUgC,IACzCG,QAAS,CAAEjF,OAAQ,YA9Ec,cAkF7B,IAAIiD,MAAJ,wCAA2CV,IAlFd,4CAAH,0DAsFhC4C,GAAoC,SACxC/E,EACAmC,EACAC,GACI,IACIW,EAAS/C,EAAT+C,KACR,OAAQZ,GACN,KAAKgC,KACH,MAAO,CACLW,KAAM/B,EAAKiC,KAAI,SAAAC,GAAC,OAAIA,KACpBC,MAAO,GAEX,KAAKZ,KACH,MAAO,CAAEQ,KAAK,GAAD,GAAO1C,EAAO0C,KAAd,CAAoBnF,GAAIoD,EAAKpD,MAC5C,KAAK6E,KACH,MAAO,CAAEM,KAAM/B,GAAQ,IAEzB,QACE,MAAO,CAAE+B,KAAM/B,KAIrB,4CAAe,WAAOZ,EAAM6B,EAAU5B,GAAvB,0BAAA6B,EAAA,6DACLkB,EAAcC,KAAdD,UADK,SAEuBpB,GAClC5B,EACA6B,EACA5B,GALW,uBAELqC,EAFK,EAELA,IAFK,IAEAI,gBAFA,MAEU,GAFV,GAQAhF,UACTgF,EAAQhF,QAAU,IAAI8C,QAAQ,CAAE0C,OAAQ,sBAEtCrC,EAAQnG,aAAaC,QAAQ,SACnC+H,EAAQhF,QAAQyF,IAAI,kBAAmB,UAAYtC,GAZtC,kBAcNmC,EAAUV,EAAKI,GAAS9E,MAAK,SAAAC,GAAQ,OAC1C+E,GAAkC/E,EAAUmC,EAAM6B,OAfvC,4CAAf,0D,+DCxGMuB,GAAQC,aAAe,CAC3BC,QAAS,CACPC,QAASC,KACTC,UAAWC,KACXC,MAAOC,KACPC,kBAAmB,EACnBC,YAAa,MAIXC,GAAc,kBAClB,kBAACC,EAAA,EAAD,CAEIC,gBAAgB,MAwDhBC,GAAW,CACfC,GArDiB,CACjBC,GAAI,CACAC,aAAc,CACVC,WAAY,mDAEhBC,OAAQ,CACJC,KAAM,UACNC,OAAQ,SACRC,KAAM,eACNC,OAAQ,SACR5I,OAAQ,WACR6I,KAAM,gBACNC,KAAM,eACNC,OAAQ,UACRC,OAAQ,QACRC,QAAS,gBAEbC,QAAS,CACLC,KAAM,KACNC,MAAO,KACPC,KAAM,IAEVC,KAAM,CACFV,OAAQ,iBACRW,UAAW,oBACX3B,MAAO,iDACP4B,QAAS,aACTC,UAAW,mBAEfC,KAAM,CACFC,iBAAkB,iDAClBC,UAAW,SACXxF,SAAU,kBACVC,SAAU,SACVwF,QAAS,gBACTC,cAAe,mDACfC,OAAQ,eAEZC,WAAY,CACR/G,SAAU,UACVgH,UAAW,wDACXC,UAAW,oDACXC,SAAU,kCACVC,SAAU,+CACVC,OAAQ,0BACR5G,MAAO,gCACP6G,MAAO,wCACPC,MAAO,uDAOfC,GAAIC,MAGAC,GAAe,SAAAC,GAAM,OAAIxC,GAASwC,IA4CzBC,GA1CH,kBACV,kBAACC,EAAA,EAAD,CAAOF,OAAO,KAAKD,aAAcA,GAC/BI,UAAW9C,GACXX,MAAOA,GACP0D,SAAUC,GACVzB,UAAW0B,EACXC,aAAcA,GACdxM,MAAM,qBACNyM,aAAcA,KAEZ,SAAApG,GAAI,MAAI,CACR,kBAACqG,EAAA,EAAD,CACEnG,KAAK,UACL6D,KAAM3I,EACN0I,KAAe,eAAT9D,EAAwBpC,EAAW,KACzCiG,OAAiB,eAAT7D,EAAwB5B,EAAa,KAC7CwD,QAAS,CAAExH,MAAO,WAClBkM,KAAMC,OAER,kBAACF,EAAA,EAAD,CACAnG,KAAK,WACL6D,KAAMpF,EACNmF,KAAMhF,EACN+E,OAAQ9E,EACR6C,QAAS,CAAExH,MAAO,YAClBkM,KAAMC,OAEG,eAATvG,EACE,kBAACqG,EAAA,EAAD,CACEnG,KAAK,YACL6D,KAAMzF,EACNwF,KAAMtF,EACNqF,OAAQpF,EACRmD,QAAS,CAAExH,MAAO,aAClBkM,KAAME,OAEN,UCvHUC,QACW,cAA7BC,OAAOzJ,SAAS0J,UAEe,UAA7BD,OAAOzJ,SAAS0J,UAEhBD,OAAOzJ,SAAS0J,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAS9J,SAAS+J,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpK,MAAK,SAAAqK,GACjCA,EAAaC,kB","file":"static/js/main.bca410d7.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default () => (\n    <Card>\n        <CardHeader title={\"Buna \" + localStorage.getItem('name') + \". Bine ati venit in panoul de administrare!\"} />\n    </Card>\n);","import React from 'react';\n\nimport { Pagination } from 'react-admin';\n\n// Giving rowsPerPageOptions the value of an empty array disables pagination\nexport default props => <Pagination rowsPerPageOptions={[]} {...props} />\n","import React, { Fragment, useState } from 'react';\nimport {\n    Confirm\n} from 'react-admin';\nimport Button  from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst DeleteButton = ({ doAction, title, content, label }) => {\n    const [open, setOpen] = useState(false);\n    const handleClick = () => setOpen(true);\n    const handleDialogClose = () => setOpen(false);\n\n    const handleDelete = () => {\n        doAction();\n        setOpen(false);\n    };\n\n    return (\n        <Fragment>\n            <Button variant=\"contained\" color=\"error\" startIcon={<DeleteIcon />} onClick={handleClick}>{label}</Button>\n            <Confirm\n                isOpen={open}\n                title={title}\n                content={content}\n                confirm=\"Da\"\n                confirmColor=\"primary\"\n                cancel=\"Nu\"\n                onConfirm={handleDelete}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n}\n\nexport default DeleteButton;","import React,{useState} from \"react\";\nimport PostPagination from \"./pagination.js\";\nimport DeleteButton from \"./DeleteButton.js\";\n\nimport {\n  List,\n  TextField,\n  Edit,\n  Create,\n  Datagrid,\n  SimpleForm,\n  SelectInput,\n  TextInput,\n  Filter,\n  Responsive,\n  ReferenceInput,\n  Toolbar,\n  SaveButton,\n  required\n  } from \"react-admin\";\n\nexport const ListCursuri = props => {\n  const profesorId = localStorage.getItem(\"profesorId\");\n  const role = localStorage.getItem(\"role\");\n  const [url, setUrl] = useState(null);\n  console.log(localStorage);\n  const mystyle = {\n    margin: \"15px\",\n    textDecoration: \"none\",\n    color: \"#2196f3\",\n  };\n  const imageStyle = {\n    height: \"20px\",\n    width: \"20px\",\n    margin:\"0 5px 0 0\"\n  };\n\n  return (\n    <>\n  <List \n  filters={<FilterProfesor />}\n  title=\"Cursuri\" {...props} bulkActions={false} pagination={<PostPagination />}>\n    <Responsive\n      medium={\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"numeCurs\" sortable={false} label=\"Nume curs\" />\n          <TextField source=\"specializare\" sortable={false} label=\"Specializare\" />\n          <TextField source=\"an\" sortable={false} label=\"An\" />\n          <TextField source=\"profesorResp.name\" sortable={false} label=\"Profesor\" />\n        </Datagrid>\n      }\n    />\n  </List>\n  </>\n  );\n};\n\nconst CursName = ({ record }) => {\n  // Prepare data in title compute\n  return <span>Editare Curs</span>;\n};\n\nconst CustomToolbar = props => (\n  <Toolbar {...props}>\n      <SaveButton/>\n      &nbsp;&nbsp;\n      <DeleteButton label=\"Sterge curs\" doAction={() => deleteCurs(props)} title=\"Sterge curs\" content=\"Sunteti sigur ca doriti sa stergeti aceast curs?\" />\n  </Toolbar>\n);\n\n\nconst deleteCurs = ({ record = {} }) => {\n    const request = new Request(\"http://localhost:8000/cursuri/\" + record.id + \"/delete\", {\n        method: \"GET\",\n        headers: { \"X-Authorization\": \"Bearer \" + localStorage.getItem(\"token\"),\n        \"Content-type\": \"application/json; charset=UTF-8\" }\n      });\n      fetch(request)\n        .then(response => {\n          document.location.href = '#/cursuri/';\n        });\n}\nconst FilterProfesor = (props) => (\n  <Filter {...props}>\n    {localStorage.getItem(\"role\") === \"ROLE_ADMIN\" && (\n      <ReferenceInput\n        label=\"Profesor\"\n        source=\"profesor\"\n        reference=\"profesori\"\n        allowEmpty\n        alwaysOn\n      >\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n    )}\n  </Filter>\n);\nexport const CursEdit = (props) => (  \n  <Edit title={<CursName />} {...props}>\n    <SimpleForm redirect=\"list\" toolbar={<CustomToolbar />}>\n\n      <ReferenceInput validate={required()} label=\"Profesor\" source=\"profesorId\" reference=\"profesori\">\n          <SelectInput optionValue=\"id\" optionText=\"name\" />\n      </ReferenceInput>\n\n      <TextInput validate={required()} source=\"numeCurs\" label=\"Nume curs\"  />\n      <TextInput validate={required()} source=\"an\" label=\"An universitar\"  />\n      <TextInput validate={required()} source=\"specializare\" label=\"Specializare\"  />\n    </SimpleForm>\n  </Edit>\n);\n\nexport const CursCreate = props => {\n\n  return (\n    <>\n\n    <Create title=\"Adauga curs\" {...props}>\n    <SimpleForm redirect=\"list\" toolbar={<CustomToolbar />}>\n      <ReferenceInput validate={required()} label=\"Profesor\" source=\"profesorId\" reference=\"profesori\">\n          <SelectInput optionValue=\"id\" optionText=\"name\" />\n      </ReferenceInput>\n\n      <TextInput validate={required()} source=\"numeCurs\" label=\"Nume curs\"  />\n      <TextInput validate={required()} source=\"an\" label=\"An universitar\"  />\n      <TextInput validate={required()} source=\"specializare\" label=\"Specializare\"  />\n    \n    </SimpleForm>\n  </Create>\n  </>\n)};\n","import React from \"react\";\nimport PostPagination from \"./pagination.js\";\n\nimport {\n  List,\n  TextField,\n  Edit,\n  TextInput,\n  Create,\n  Datagrid,\n  SimpleForm,\n  Responsive,\n  required,\n  email,\n  Toolbar,\n  SaveButton,\n\n} from \"react-admin\";\n\n\nconst boxProps = {\n  bgcolor: 'background.paper',\n  borderColor: 'text.primary',\n  m: 1,\n  border: 1\n};\n\nexport const ListProfesori = props => (\n  <List title=\"Profesori\" {...props} bulkActions={false} pagination={<PostPagination />}>\n    <Responsive\n      medium={\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"name\" label=\"Nume\"  />\n          <TextField source=\"mail\" label=\"Adresa mail\"  />\n          <TextField source=\"phone\" label=\"Numar de telefon\"  />\n        </Datagrid>\n      }\n    />\n  </List>\n);\n\nconst ProfesorName = () => {\n\n  return <span>Administreaza Profesor</span>;\n};\n\nconst CustomToolbar = props => (\n  <Toolbar {...props}>\n      <SaveButton />\n  </Toolbar>\n);\n\nexport const ProfesorEdit = props => (\n  <Edit title={<ProfesorName />} {...props}>\n    <SimpleForm toolbar={<CustomToolbar />} redirect=\"list\">\n      <TextInput validate={required()} source=\"name\" label=\"Nume\"  />\n      <TextInput validate={required()} source=\"phone\" label=\"Numar de telefon\"  />\n      <TextField source=\"mail\" label=\"Email\"  />\n    \n    </SimpleForm>\n  </Edit>\n);\n\nexport const ProfesorCreate = props => (\n  <Create title=\"Adauga profesor\" {...props}>\n    <SimpleForm redirect=\"list\">\n      <TextInput validate={required()} source=\"name\" label=\"Nume\" />\n      <TextInput validate={required()} source=\"phone\" label=\"Numar de telefon\" />\n      <TextInput validate={[required(), email()]} source=\"mail\" label=\"Email\" />\n    </SimpleForm>\n  </Create>\n);","import React,{useState} from \"react\";\nimport PostPagination from \"./pagination.js\";\nimport DeleteButton from \"./DeleteButton.js\";\n\nimport {\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  SimpleForm,\n  SelectInput,\n  Filter,\n  Responsive,\n  ReferenceInput,\n  Toolbar,\n  SaveButton,\n  } from \"react-admin\";\n\nexport const ListEvidente = props => {\n  const profesorId = localStorage.getItem(\"profesorId\");\n  const role = localStorage.getItem(\"role\");\n  const [url, setUrl] = useState(null);\n  console.log(localStorage);\n  const mystyle = {\n    margin: \"15px\",\n    textDecoration: \"none\",\n    color: \"#2196f3\",\n  };\n  const imageStyle = {\n    height: \"20px\",\n    width: \"20px\",\n    margin:\"0 5px 0 0\"\n  };\n\n  return (\n    <>\n  <List \n  filters={<FilterProfesor />}\n  title=\"Evidente\" {...props} bulkActions={false} pagination={<PostPagination />}>\n    <Responsive\n      medium={\n        <Datagrid rowClick=\"edit\">\n        \n        </Datagrid>\n      }\n    />\n  </List>\n  </>\n  );\n};\n\nconst EvidentaName = ({ record }) => {\n  // Prepare data in title compute\n  return <span>Editare evidenta</span>;\n};\n\nconst CustomToolbar = props => (\n  <Toolbar {...props}>\n      <SaveButton/>\n      &nbsp;&nbsp;\n      <DeleteButton label=\"Sterge evidenta\" doAction={() => deleteEvidenta(props)} title=\"Sterge evidenta\" content=\"Sunteti sigur ca doriti sa stergeti aceasta evidenta?\" />\n  </Toolbar>\n);\n\n\nconst deleteEvidenta = ({ record = {} }) => {\n    const request = new Request(\"http://localhost:8000/evidente/\" + record.id + \"/delete\", {\n        method: \"GET\",\n        headers: { \"X-Authorization\": \"Bearer \" + localStorage.getItem(\"token\"),\n        \"Content-type\": \"application/json; charset=UTF-8\" }\n      });\n      fetch(request)\n        .then(response => {\n          document.location.href = '#/evidente/';\n        });\n}\nconst FilterProfesor = (props) => (\n  <Filter {...props}>\n    {localStorage.getItem(\"role\") === \"ROLE_ADMIN\" && (\n      <ReferenceInput\n        label=\"Profesor\"\n        source=\"profesor\"\n        reference=\"profesori\"\n        allowEmpty\n        alwaysOn\n      >\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n    )}\n  </Filter>\n);\nexport const EvidentaEdit = (props) => (  \n  <Edit title={<EvidentaName />} {...props}>\n    <SimpleForm redirect=\"list\" toolbar={<CustomToolbar />}>\n\n     \n    </SimpleForm>\n  </Edit>\n);\n\nexport const EvidentaCreate = props => {\n\n  return (\n    <>\n\n    <Create title=\"Adauga evidenta\" {...props}>\n    <SimpleForm redirect=\"list\" toolbar={<CustomToolbar />}>\n   \n    \n    </SimpleForm>\n  </Create>\n  </>\n)};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Title } from 'react-admin';\n\nexport default () => (\n    <Card>\n        <Title title=\"Not Found\" />\n        <CardContent>\n            <h1>404: Page not found</h1>\n        </CardContent>\n    </Card>\n);","import {\n  AUTH_LOGIN,\n  AUTH_LOGOUT,\n  AUTH_ERROR,\n  AUTH_CHECK,\n  AUTH_GET_PERMISSIONS\n} from \"react-admin\";\n\nexport default (type, params) => {\n  // called when the user attempts to log in\n  if (type === AUTH_LOGIN) {\n    const { username, password } = params;\n    const request = new Request(\"http://localhost:8000/api/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password }),\n      headers: new Headers({ \"Content-Type\": \"application/json\" })\n    });\n    return fetch(request)\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ token, role, profesorId, name, email}) => {\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userId\", role);\n          localStorage.setItem(\"role\", role);\n          localStorage.setItem(\"email\", email);\n          localStorage.setItem(\"name\", name);\n          localStorage.setItem(\"profesorId\", profesorId);\n        \n      });\n  }\n  \n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"profesorId\");\n    return Promise.resolve();\n  }\n  // called when the API returns an error\n  if (type === AUTH_ERROR) {\n    const { status } = params;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"token\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  }\n  // called when the user navigates to a new location\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem(\"token\") ? Promise.resolve() : Promise.reject();\n  }\n\n  if (type === AUTH_GET_PERMISSIONS) {\n    const roles = localStorage.getItem(\"role\");\n    return roles ? Promise.resolve(roles) : Promise.reject();\n  }\n  return Promise.resolve;\n};\n","import { stringify } from \"query-string\";\nimport {\n  GET_LIST,\n  GET_ONE,\n  CREATE,\n  UPDATE,\n  DELETE,\n  DELETE_MANY,\n  GET_MANY,\n  fetchUtils\n} from \"react-admin\";\n\nconst API_URL = \"http://localhost:8000\";\n\n\nconst convertDataProviderRequestToHTTP = async (type, resource, params) => {\n  const role = localStorage.getItem(\"role\");\n  console.log(role);\n  console.log(localStorage);\n  switch (type) {\n    case GET_MANY:\n    case GET_LIST:\n      if (role === \"ROLE_PROFESOR\") {\n        const profesorId = localStorage.getItem(\"profesorId\");\n        if (resource === \"cursuri\") {\n          return {\n            url: `${API_URL}/api/${resource}/profesor/${profesorId}`\n          };\n        } \n        else if (resource === \"cursuri\") {\n          const query = {\n            filter: JSON.stringify(params.filter),\n          };\n\n          return {\n            url: `${API_URL}/api/${resource}/profesor/${profesorId}?${stringify(\n              query\n            )}`,\n          };\n        }\n        else if(resource === \"evidente\"){\n          const query = {\n            filter: JSON.stringify(params.filter),\n          };\n\n          return {\n            url: `${API_URL}/api/${resource}/profesor/${profesorId}?${stringify(\n              query\n            )}`,\n          };\n        }\n      } \n\n      if (resource === \"cursuri\") {\n        const query = {\n          filter: JSON.stringify(params.filter),\n        };\n        localStorage.setItem(\"profesorId\", params.filter.profesor);\n        console.log(params.filter.profesor)\n        return {\n          url: `${API_URL}/api/${resource}?${stringify(query)}`,\n        };\n      }\n      return {\n        url: `${API_URL}/${resource}`\n      };\n    case GET_ONE:\n      return {\n        url: `${API_URL}/${resource}/${params.id}`,\n        options: { method: \"GET\", body: JSON.stringify(params.data) }\n      };\n    case UPDATE:\n      return {\n        url: `${API_URL}/api/${resource}/${params.id}`,\n        options: { method: \"PUT\", body: JSON.stringify(params.data) }\n      };\n    case CREATE:\n\n      return {\n        url: `${API_URL}/api/${resource}`,\n        options: { method: \"POST\", body: JSON.stringify(params.data) }\n      };\n    case DELETE:\n      return {\n        url: `${API_URL}/api/${resource}/${params.id}`,\n        options: { method: \"DELETE\" }\n      };\n    case DELETE_MANY: {\n      const query = {\n        filter: JSON.stringify({ id: params.id })\n      };\n      return {\n        url: `${API_URL}/${resource}?${stringify(query)}`,\n        options: { method: \"DELETE\" }\n      };\n    }\n    default:\n      throw new Error(`Unsupported fetch action type ${type}`);\n  }\n};\n\nconst convertHTTPResponseToDataProvider = (\n  response,\n  type,\n  params\n) => {\n  const { json } = response;\n  switch (type) {\n    case GET_LIST:\n      return {\n        data: json.map(x => x),\n        total: 1\n      };\n    case CREATE:\n      return { data: { ...params.data, id: json.id } };\n    case DELETE_MANY: {\n      return { data: json || [] };\n    }\n    default:\n      return { data: json };\n  }\n};\n\nexport default async (type, resource, params) => {\n  const { fetchJson } = fetchUtils;\n  const { url, options = {} } = await convertDataProviderRequestToHTTP(\n    type,\n    resource,\n    params\n  );\n\n  if (!options.headers) {\n      options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('X-Authorization', 'Bearer ' + token);\n\n  return fetchJson(url, options).then(response =>\n    convertHTTPResponseToDataProvider(response, type, resource, params)\n  );\n\n};","import React from \"react\";\nimport { Admin, Resource, Login } from \"react-admin\";\nimport Dashboard from \"./Dashboard\";\nimport { ListCursuri, CursEdit, CursCreate } from \"./cursuri.js\";\nimport { ListProfesori, ProfesorEdit, ProfesorCreate } from \"./profesori.js\";\nimport { ListEvidente, EvidentaEdit, EvidentaCreate } from \"./evidente.js\";\n\nimport NotFound from \"./notFound\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport authProvider from \"./authProvider\";\nimport dataProvider from \"./dataProvider.js\";\n\nimport SchoolIcon from '@material-ui/icons/School';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport englishMessages from 'ra-language-english';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: yellow,\n    error: red,\n    contrastThreshold: 3,\n    tonalOffset: 0.2\n  }\n});\n\nconst MyLoginPage = () => (\n  <Login\n      // A random image that changes everyday\n      backgroundImage=\"\"\n  />\n);\n\nconst roMessages = {\n  ra: {\n      notification: {\n          http_error: 'Eroare de conexiune. Va rugam sa mai incercati.',\n      },\n      action: {\n          save: 'Salveza',\n          delete: 'Sterge',\n          show: 'Vizualizeaza',\n          create: 'Adauga',\n          cancel: 'Anuleaza',\n          edit: 'Administreaza',\n          list: 'Vizualizeaza',\n          export: 'Exporta',\n          search: 'Cauta',\n          refresh: 'Actualizeaza'\n      },\n      boolean: {\n          true: 'Da',\n          false: 'Nu',\n          null: '',\n      },\n      page: {\n          create: 'Adauga %{name}',\n          dashboard: 'Pagina principala',\n          error: 'Ceva nu a mers bine. Va rugam sa mai incercati',\n          loading: 'Se incarca',\n          not_found: 'Nu a fost gasit'\n      },\n      auth: {\n          auth_check_error: 'Va rugam sa va autentificati pentru a continua',\n          user_menu: 'Profil',\n          username: 'Nume utilizator',\n          password: 'Parola',\n          sign_in: 'Autentificare',\n          sign_in_error: 'Autentificare esuata! Va rugam sa mai incercati.',\n          logout: 'Deconectare',\n      },\n      validation: {\n          required: 'Necesar',\n          minLength: 'Lungimea trebuie sa fie de cel putin %{min} caractere',\n          maxLength: 'Lungimea nu poate fi mai mare de %{max} caractere',\n          minValue: 'Trebuie sa fie cel putin %{min}',\n          maxValue: 'Trebuie sa fie cel mult %{max} sau mai putin',\n          number: 'Trebuie sa fie un numar',\n          email: 'Trebuie sa fie un email valid',\n          oneOf: 'Trebuie sa fie una dintre: %{options}',\n          regex: 'Trebuie sa se potriveasca cu formatul: %{pattern}',\n      },\n  },\n};\n\nconst messages = {\n  ro: roMessages,\n  en: englishMessages,\n};\n\nconst i18nProvider = locale => messages[locale];\n\nconst App = () => (\n  <Admin locale=\"ro\" i18nProvider={i18nProvider}\n    loginPage={MyLoginPage}\n    theme={theme}\n    catchAll={NotFound}\n    dashboard={Dashboard}\n    dataProvider={dataProvider}\n    title=\"Panou administrare\"\n    authProvider={authProvider}\n  >\n    { role => [\n      <Resource\n        name=\"cursuri\"\n        list={ListCursuri}\n        edit={role === \"ROLE_ADMIN\" ? CursEdit : null}\n        create={role === \"ROLE_ADMIN\" ? CursCreate : null}\n        options={{ label: \"Cursuri\" }}\n        icon={SchoolIcon}\n      />,\n      <Resource\n      name=\"evidente\"\n      list={ListEvidente}\n      edit={EvidentaEdit}\n      create={EvidentaCreate}\n      options={{ label: \"Evidente\" }}\n      icon={SchoolIcon}\n    />,\n      role === \"ROLE_ADMIN\" ? (\n        <Resource\n          name=\"profesori\"\n          list={ListProfesori}\n          edit={ProfesorEdit}\n          create={ProfesorCreate}\n          options={{ label: \"Profesori\" }}\n          icon={PersonPinIcon}\n        />\n      ) : null,\n     \n    ]}\n  </Admin>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}